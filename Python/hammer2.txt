
This repository
Pull requests
Issues
Marketplace
Explore
 @Spitfire22
 Unwatch 10
  Unstar 8
 Fork 3 PdxCodeGuild/20171003-FullStack-Day
 Code  Issues 0  Pull requests 0  Projects 0  Wiki  Insights
Branch master Find file Copy path20171003-FullStack-Day/1 - Python/docs/13 - Dictionariesmd
f2830ea  2 days ago
@simian201 simian201 re-arranged docs tidied up virtualenv
1 contributor
RawBlameHistory
86 lines 63 sloc  321 KB
Dictionaries

Dictionaries or dicts provide an unordered mutable sequence of key-value pairs or a mapping between keys and values For more information check the official docs

Dict literals are written using curly braces and key-value pairs defined with colons and separated by commas

apple 10 pear 15 grapes 075
David day Sheri day night

Keys have to be unique values do not Any immutable value int float string tuple can be a key thus lists and other dicts cant be keys Values can be any type

The values of a dictionary are accessed by using the square-brackets with the key similarly to how we access a specific element from a list using its index

product_to_price = apple 10 pear 15 grapes 075
product_to_priceapple  #> 10
product_to_pricegrapes  #> 075
product_to_pricebanana  # Throws KeyError
product_to_price10  # Throws KeyError
Values can then be added or updated by using the assignment operator =

product_to_price = apple 10 pear 15 grapes 075
product_to_priceapple = 20
product_to_price  #> apple 20 pear 15 grapes 075
product_to_pricebanana = 025
product_to_price  #> apple 10 pear 15 banana 025 grapes 075
To check if a list contains a key use in

product_to_price = apple 10 pear 15 grapes 075
if apple in product_to_price
    printapple  + strproduct_to_priceapple
apple 10
To combine two dictionaries use the update type method Note that it changes the given dict and does not return a new one

product_to_price = apple 10 pear 15 grapes 075
product_to_priceupdatebanana 025
product_to_price  #> apple 10 pear 15 banana 025 grapes 075
There are a few type methods that allow you to view different parts of the dictionary All produce sequences and not proper lists so cast them to a list to use them normally

listproduct_to_pricekeys  #> pear apple grapes
listproduct_to_pricevalues  #> 075 10 15
listproduct_to_priceitems  #> grapes 075 apple 10 pear 15
Order

Dictionaries are unordered there is no guarantee the same order will come out at each call Call sorted on the results if you need a stable order

sortedproduct_to_pricekeys  #> apple grapes pear
Conversions

You can cast a sequences of two-tuples to a dictionary using dict This means items and dict are inverses

names_and_fav_colors = Alice red David green
dictnames_and_fav_colors  #> Alice red David green
dictproduct_to_priceitems == product_to_price  #> True
Dict Comprehensions

Dict comprehensions look like list comprehensions but with curly braces and colons Remember you probably want to modify both keys and values so you need to iterate over items

names_to_ages = Amanda 90 David 50
name age / 2 for name age in names_to_agesitems  #> Amanda 45 David 25
Â© 2017 GitHub Inc
Terms
Privacy
Security
Status
Help
Contact GitHub
API
Training
Shop
Blog
About